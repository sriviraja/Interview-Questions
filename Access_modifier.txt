1. Which of these is used as default for a member of a class if no access specifier is used for it?
a) private
b) public
c) public, within its own package
d) protected

Ans: a
Explanation: When we pass an argument by call-by-value a copy of argument is made into the formal parameter of the subroutine and changes made on parameters of subroutine have no effect on original argument, they remain the same.


2.What is the output of this program?
    class access
    {
       public int x;
       private int y;
       void cal(int a, int b)
       {
            x =  a + 1;
           y =  b;
        }        
    }    
   class access_specifier 
   {
       public static void main(String args[])
       {
           access obj = new access();   
           obj.cal(2, 3);
           System.out.println(obj.x + " " + obj.y);     
       }   }
a) 3 3
b) 2 3
c) Runtime Error
d) Compilation Error

Answer: c
Explanation:Exception in thread “main” java.lang.Error: Unresolved compilation problem:
The field access.y is not visible

3.Do you think the below program is written correctly? 




package pack1;
 
class X
{
    protected int i = 1221;
     
    void methodOfX()
    {
        System.out.println(i);
    }
}
 
public class MainClass
{
    public static void main(String[] args)
    {
        X x = new X();
         
        System.out.println(x.i);
         
        x.methodOfX();
    }
}

a) 1221 1221 
b) 0 1221
c) Runtime Error
d) Compilation Error
Answer :a 


4.Find out the error in the following code?


enum Levels 
{
    private TOP,
     
    public MEDIUM,
     
    protected BOTTOM;
    public TOP,

}

a. No error
b. Enum cannot have access specifiers of any type. 
c. Enum cannot have access specifiers of private type.
d. Enum cannot have access specifiers of protected type.

Answer :
You can’t declare enum constants with any modifiers. They are public, static and final by default.


5. Enum types can have public constructors. True OR False?

Answer :
False. Enum types can have only private constructors.


6. What will be the output of the following program?



enum Directions
{
    NORTH, SOUTH, WEST, EAST;
     
    private Directions()
    {
        System.out.println(1);
    }
}
 
public class MainClass
{
    public static void main(String[] args)
    {
        Directions d1 = new Directions();
    }
}
a) 1
b) Compile Time Error
c) Run Time Error
d) None

Answer :
b) Compile Time Error
You can’t instantiate enum types using ‘new’ operator.

7. Enum types can implement interfaces. True or false?

Answer : True
Yes, enum types can implement any number of interfaces.




8.What will be the output of the below program?


enum MyEnums
{
    FIRST, SECOND, THIRD, FOURTH;
}
  
public class Test
{
   public static void main(String[] args)
   {
       MyEnums[] myEnums = new MyEnums[4];
  
       for (int i = 0; i < myEnums.length; i++)
       {
           System.out.println(myEnums[i]);
       }
   }
}

a. null null null null
b. FIRST SECOND THIRD FOURTH
c. null FIRST SECOND THIRD
d. FIRST SECOND THIRD null 
Answer : a. 



9. 
public class Outer 
{ 
    public void someOuterMethod() 
    {
        //Line 5 
    } 
    public class Inner { } 
    
    public static void main(String[] argv) 
    {
        Outer ot = new Outer(); 
        //Line 10
    } 
} 
Which of the following code fragments inserted, will allow to compile?
a.
new Inner(); //At line 5
b.
new Inner(); //At line 10
c.
new ot.Inner(); //At line 10
d.
new Outer.Inner(); //At line 10

Answer: a. 

Explanation
Option A compiles without problem.
Option B gives error - non-static variable cannot be referenced from a static context.
Option C package ot does not exist.
Option D gives error - non-static variable cannot be referenced from a static context.







10. How can a protected modifier be accessed?
a) accessible only within the class
b) accessible only within package
c) accessible within package and outside the package but through inheritance only
d) accessible by all

Answer: c
Explanation: The protected access modifier is accessible within package and outside the package but only through inheritance. The protected access modifier can be used with data member, method and constructor. It cannot be applied on the class.




11. All the variables of interface should be ?
a) default and final
b) default and static
c) public,static and final
d) protect, static and final

Answer: c
Explanation: Variables of an interface are public, static and final by default because the interfaces cannot be instantiated, final ensures the value assigned cannot be changed with the implementing class and public for it to be accessible by all the implementing classes.



12. . Can a class be declared with protected modifier?
a) True
b) False
Answer: b
Explanation: Protected class member (method or variable) is like package-private (default visibility), except that it also can be accessed from subclasses. Since there is no such concept as ‘subpackage’ or ‘package-inheritance’ in Java, declaring class protected or package-private would be the same thing.


13. private method can be overridden as public method. True or false?
a. True
b. False
c. Depends on certain cases.
d. None of the above
Answer : b
False. private methods are not at all inherited.




14. A method of super class with default access modifier can be overridden as protected or public but not as private. True or false?
a. True
b. False
c. Only for static super classes.
d. None of the above

Answer : a. 
True.


15. Can we create instance of Enum outside of Enum itself?
a. True
b. False
c. Depends on the type of constructor used.
d. None of the above.
 
Answer: b
Explanation: Enum does not have public constructor.


16. What is the output of the following program?
class A
{
}
enum Enums extends A
{
    ABC, BCD, CDE, DEF;
}
a) Runtime Error
b) Compilation Error
c) It runs successfully
d) EnumNotDefined Exception

Answer: b
Explanation: Enum types cannot extend class.


17. What is the output of below code snippet?
enum Enums
{
    A, B, C;
private Enums()
    {
        System.out.println(10);
    }
}
public class MainClass
{
    public static void main(String[] args)
    {
        Enum en = Enums.B;
    }
}
a) 10 10 10
b) Compilation Error
c) 10 10
d) Runtime Exception

Answer: a
Explanation: The constructor of Enums is called which prints 10.

18. Which method returns the elements of Enum class?
a) getEnums()
b) getEnumConstants()
c) getEnumList()
d) getEnum()

Answer: b
Explanation: getEnumConstants() returns the elements of this enum class or null if this Class object does not represent an enum type.

19. Which class does all the Enums extend?
a) Object
b) Enums
c) Enum
d) EnumClass

Answer: c
Explanation: All enums implicitly extend java.lang.Enum. Since Java does not support multiple inheritance, an enum cannot extend anything else.

20. Which of the following is true about static methods?
1. They can only call other static methods. 
2. They can only access static data. 
3. They cannot refer this or super in any way. 
a. Only 1. 
b. 1 and 2. 
c. 2 and 3. 
d. 1, 2 and 3. 
Answer: d. 
